{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\przemokoduje\\\\certyfikat-1\\\\client\\\\src\\\\components\\\\fileUploader\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./fileUploader.scss\"; // Stylizacja komponentu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  label,\n  onFileSelect\n}) => {\n  _s();\n  const [files, setFiles] = useState([]); // Przechowywanie wielu plików\n  const [fileUrls, setFileUrls] = useState([]); // Przechowywanie URL dla podglądu\n  const fileInputRef = useRef(null);\n\n  // Funkcja do obsługi zmiany pliku\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    const newFiles = [...files, ...selectedFiles]; // Dodaj nowe pliki do istniejących\n    setFiles(newFiles);\n    onFileSelect(newFiles);\n\n    // Tworzenie nowych URL-ów do podglądu\n    const newUrls = selectedFiles.map(file => URL.createObjectURL(file));\n    setFileUrls(prevUrls => [...prevUrls, ...newUrls]);\n  };\n\n  // Zwalnianie pamięci po usunięciu komponentu lub zmiany pliku\n  useEffect(() => {\n    return () => {\n      fileUrls.forEach(url => URL.revokeObjectURL(url));\n    };\n  }, [fileUrls]);\n\n  // Funkcja do obsługi kliknięcia przycisku (otwiera okno wyboru pliku)\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Funkcja do usuwania wybranego pliku\n  const handleRemoveFile = index => {\n    const updatedFiles = files.filter((_, i) => i !== index);\n    const updatedUrls = fileUrls.filter((_, i) => i !== index);\n    setFiles(updatedFiles); // Aktualizacja stanu plików\n    setFileUrls(updatedUrls); // Aktualizacja URL-ów dla podglądu\n\n    onFileSelect(updatedFiles); // Przekazywanie zaktualizowanej listy plików do rodzica\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button lato-regular\",\n      onClick: handleButtonClick,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: \"none\"\n      },\n      onChange: handleFileChange,\n      accept: \"image/*\",\n      multiple: true // Umożliwia wybór wielu plików\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-preview-container\",\n      children: fileUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: \"preview\",\n          className: \"file-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => handleRemoveFile(index),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"HSlWVGr09RqvAAP+Cs/mnzSNlmM=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","FileUploader","label","onFileSelect","_s","files","setFiles","fileUrls","setFileUrls","fileInputRef","handleFileChange","event","selectedFiles","Array","from","target","newFiles","newUrls","map","file","URL","createObjectURL","prevUrls","forEach","url","revokeObjectURL","handleButtonClick","current","click","handleRemoveFile","index","updatedFiles","filter","_","i","updatedUrls","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","style","display","onChange","accept","multiple","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/przemokoduje/certyfikat-1/client/src/components/fileUploader/FileUploader.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./fileUploader.scss\"; // Stylizacja komponentu\r\n\r\nconst FileUploader = ({ label, onFileSelect }) => {\r\n    const [files, setFiles] = useState([]); // Przechowywanie wielu plików\r\n    const [fileUrls, setFileUrls] = useState([]); // Przechowywanie URL dla podglądu\r\n    const fileInputRef = useRef(null);\r\n\r\n    // Funkcja do obsługi zmiany pliku\r\n    const handleFileChange = (event) => {\r\n        const selectedFiles = Array.from(event.target.files);\r\n\r\n        const newFiles = [...files, ...selectedFiles]; // Dodaj nowe pliki do istniejących\r\n        setFiles(newFiles);\r\n        onFileSelect(newFiles);\r\n\r\n        // Tworzenie nowych URL-ów do podglądu\r\n        const newUrls = selectedFiles.map((file) => URL.createObjectURL(file));\r\n        setFileUrls((prevUrls) => [...prevUrls, ...newUrls]);\r\n    };\r\n\r\n    // Zwalnianie pamięci po usunięciu komponentu lub zmiany pliku\r\n    useEffect(() => {\r\n        return () => {\r\n            fileUrls.forEach((url) => URL.revokeObjectURL(url));\r\n        };\r\n    }, [fileUrls]);\r\n\r\n    // Funkcja do obsługi kliknięcia przycisku (otwiera okno wyboru pliku)\r\n    const handleButtonClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    // Funkcja do usuwania wybranego pliku\r\n    const handleRemoveFile = (index) => {\r\n        const updatedFiles = files.filter((_, i) => i !== index);\r\n        const updatedUrls = fileUrls.filter((_, i) => i !== index);\r\n\r\n        setFiles(updatedFiles); // Aktualizacja stanu plików\r\n        setFileUrls(updatedUrls); // Aktualizacja URL-ów dla podglądu\r\n\r\n        onFileSelect(updatedFiles); // Przekazywanie zaktualizowanej listy plików do rodzica\r\n    };\r\n\r\n    return (\r\n        <div className=\"file-uploader\">\r\n            <button className=\"upload-button lato-regular\" onClick={handleButtonClick}>\r\n                {label}\r\n            </button>\r\n            <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                style={{ display: \"none\" }}\r\n                onChange={handleFileChange}\r\n                accept=\"image/*\"\r\n                multiple // Umożliwia wybór wielu plików\r\n            />\r\n            <div className=\"file-preview-container\">\r\n                {fileUrls.map((url, index) => (\r\n                    <div key={index} className=\"file-preview\">\r\n                        <img src={url} alt=\"preview\" className=\"file-thumbnail\" />\r\n                        <button className=\"remove-button\" onClick={() => handleRemoveFile(index)}>\r\n                            x\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}