{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/certifikat/src/components/home2/Home2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\"; // Importujemy motion z framer-motion\nimport \"./home2.scss\";\n\n// Karty z obrazami\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  id: 1,\n  imageUrl: \"/images/Tło usunięte (scene1).png\"\n}, {\n  id: 2,\n  imageUrl: \"/images/Tło usunięte (scene2).png\"\n}, {\n  id: 3,\n  imageUrl: \"/images/Tło usunięte (scene3).png\"\n}, {\n  id: 4,\n  imageUrl: \"/images/Tło usunięte (scene4).png\"\n}];\nexport default function Home2() {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [zIndexes, setZIndexes] = useState(cards.map((_, index) => cards.length - index));\n  const handleSwipe = direction => {\n    const newZIndexes = [...zIndexes];\n    if (direction === \"right\") {\n      cards.forEach((_, index) => {\n        if (index === currentIndex) {\n          newZIndexes[index] -= 1; // active card z-index -1\n        } else if (index < currentIndex) {\n          newZIndexes[index] -= 1; // left z-index -1\n        } else {\n          newZIndexes[index] += 1; // stack z-index +1\n        }\n      });\n      setCurrentIndex(prevIndex => prevIndex < cards.length - 1 ? prevIndex + 1 : prevIndex);\n    } else if (direction === \"left\") {\n      cards.forEach((_, index) => {\n        if (index === currentIndex) {\n          newZIndexes[index] -= 1; // active card z-index -1\n        } else if (index < currentIndex) {\n          newZIndexes[index] += 1; // left z-index +1\n        } else {\n          newZIndexes[index] -= 1; // stack z-index -1\n        }\n      });\n      setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : prevIndex);\n    }\n    setZIndexes(newZIndexes);\n  };\n  const getCardStyle = index => {\n    const distance = Math.abs(index - currentIndex);\n    const offset = distance * 50; // Stała wartość dla przesunięcia\n    const scale = 1 - distance * 0.07; // Stała wartość dla zmniejszania skali\n\n    if (index === currentIndex) {\n      return {\n        zIndex: zIndexes[index]\n      };\n    } else if (index < currentIndex) {\n      return {\n        zIndex: zIndexes[index]\n      };\n    } else {\n      return {\n        zIndex: zIndexes[index]\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home2-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-swipe-container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: `card ${index === currentIndex ? \"active\" : index < currentIndex ? \"left\" : \"card-stack\"}`,\n        style: getCardStyle(index)\n\n        // Dodajemy animacje\n        ,\n        animate: {\n          x: index === currentIndex ? 0 : index < currentIndex ? -35 - Math.abs(currentIndex - index) * 50 // Przesuwanie na lewo\n          : 35 + Math.abs(currentIndex - index) * 50,\n          // Przesuwanie na prawo\n          scale: index === currentIndex ? 1 : 1 - Math.abs(currentIndex - index) * 0.07 // Skala\n        }\n\n        // Definiujemy animację przejścia\n        ,\n        transition: {\n          type: \"spring\",\n          // Zastosowanie sprężyny\n          stiffness: 300,\n          // Im wyższa wartość, tym szybciej karta wróci na miejsce\n          damping: 30 // Kontroluje \"drgania\" przy animacji\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.imageUrl,\n          alt: `Card ${card.id}`,\n          className: \"card-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [currentIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSwipe(\"left\"),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) // Pokazuj przycisk Left tylko wtedy, gdy currentIndex > 0\n      , currentIndex < cards.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSwipe(\"right\"),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) // Pokazuj przycisk Right tylko wtedy, gdy currentIndex < ostatnia karta\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Home2, \"LvMMuW17oHprAhMnQAp+KqWISw0=\");\n_c = Home2;\nvar _c;\n$RefreshReg$(_c, \"Home2\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","cards","id","imageUrl","Home2","_s","currentIndex","setCurrentIndex","zIndexes","setZIndexes","map","_","index","length","handleSwipe","direction","newZIndexes","forEach","prevIndex","getCardStyle","distance","Math","abs","offset","scale","zIndex","className","children","card","div","style","animate","x","transition","type","stiffness","damping","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/certifikat/src/components/home2/Home2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\"; // Importujemy motion z framer-motion\nimport \"./home2.scss\";\n\n// Karty z obrazami\nconst cards = [\n  { id: 1, imageUrl: \"/images/Tło usunięte (scene1).png\" },\n  { id: 2, imageUrl: \"/images/Tło usunięte (scene2).png\" },\n  { id: 3, imageUrl: \"/images/Tło usunięte (scene3).png\" },\n  { id: 4, imageUrl: \"/images/Tło usunięte (scene4).png\" },\n];\n\nexport default function Home2() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [zIndexes, setZIndexes] = useState(\n    cards.map((_, index) => cards.length - index)\n  );\n\n  const handleSwipe = (direction) => {\n    const newZIndexes = [...zIndexes];\n\n    if (direction === \"right\") {\n      cards.forEach((_, index) => {\n        if (index === currentIndex) {\n          newZIndexes[index] -= 1; // active card z-index -1\n        } else if (index < currentIndex) {\n          newZIndexes[index] -= 1; // left z-index -1\n        } else {\n          newZIndexes[index] += 1; // stack z-index +1\n        }\n      });\n      setCurrentIndex((prevIndex) =>\n        prevIndex < cards.length - 1 ? prevIndex + 1 : prevIndex\n      );\n    } else if (direction === \"left\") {\n      cards.forEach((_, index) => {\n        if (index === currentIndex) {\n          newZIndexes[index] -= 1; // active card z-index -1\n        } else if (index < currentIndex) {\n          newZIndexes[index] += 1; // left z-index +1\n        } else {\n          newZIndexes[index] -= 1; // stack z-index -1\n        }\n      });\n      setCurrentIndex((prevIndex) =>\n        prevIndex > 0 ? prevIndex - 1 : prevIndex\n      );\n    }\n\n    setZIndexes(newZIndexes);\n  };\n\n  const getCardStyle = (index) => {\n    const distance = Math.abs(index - currentIndex);\n    const offset = distance * 50; // Stała wartość dla przesunięcia\n    const scale = 1 - distance * 0.07; // Stała wartość dla zmniejszania skali\n\n    if (index === currentIndex) {\n      return {\n        zIndex: zIndexes[index],\n      };\n    } else if (index < currentIndex) {\n      return {\n        zIndex: zIndexes[index],\n      };\n    } else {\n      return {\n        zIndex: zIndexes[index],\n      };\n    }\n  };\n\n  return (\n    <div className=\"home2-container\">\n      <div className=\"card-swipe-container\">\n        {cards.map((card, index) => (\n          <motion.div\n            key={card.id}\n            className={`card ${\n              index === currentIndex\n                ? \"active\"\n                : index < currentIndex\n                ? \"left\"\n                : \"card-stack\"\n            }`}\n            style={getCardStyle(index)}\n            \n            // Dodajemy animacje\n            animate={{\n              x: index === currentIndex \n                ? 0 \n                : index < currentIndex \n                ? -35 - (Math.abs(currentIndex - index) * 50) // Przesuwanie na lewo\n                : 35 + (Math.abs(currentIndex - index) * 50), // Przesuwanie na prawo\n              scale: index === currentIndex \n                ? 1 \n                : 1 - (Math.abs(currentIndex - index) * 0.07), // Skala\n            }}\n\n            // Definiujemy animację przejścia\n            transition={{\n              type: \"spring\", // Zastosowanie sprężyny\n              stiffness: 300, // Im wyższa wartość, tym szybciej karta wróci na miejsce\n              damping: 30, // Kontroluje \"drgania\" przy animacji\n            }}\n          >\n            <img src={card.imageUrl} alt={`Card ${card.id}`} className=\"card-img\" />\n          </motion.div>\n        ))}\n      </div>\n\n      <div className=\"controls\">\n        {currentIndex > 0 && (\n          <button onClick={() => handleSwipe(\"left\")}>&lt;</button> // Pokazuj przycisk Left tylko wtedy, gdy currentIndex > 0\n        )}\n        {currentIndex < cards.length - 1 && (\n          <button onClick={() => handleSwipe(\"right\")}>&gt;</button> // Pokazuj przycisk Right tylko wtedy, gdy currentIndex < ostatnia karta\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}